<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from Products.CMFActivity.ActiveResult import ActiveResult\n
\n
portal = context.getPortalObject()\n
\n
def getPASDictDifference(portal, d):\n
  error_list = []\n
  pas_list = portal.acl_users.objectValues()\n
  pas_meta_type_set = set([q.meta_type for q in pas_list])\n
  for meta_type, plugin_list in d.iteritems():\n
    if meta_type not in pas_meta_type_set:\n
      error_list.append(\'Missing plugin %r.\' % meta_type)\n
    else:\n
      plugin = [q for q in pas_list if q.meta_type==meta_type][0]\n
      active_list = []\n
      for plugin_type_info in plugin.plugins.listPluginTypeInfo():\n
        interface_name = plugin_type_info[\'id\']\n
        interface = plugin_type_info[\'interface\']\n
        if plugin.testImplements(interface):\n
          if plugin.getId() in [q[0] for q in plugin.plugins.listPlugins(interface)]:\n
            active_list.append(interface_name)\n
      if plugin_list != active_list:\n
        error_list.append(\'%r missing activation, expeced %s got %s.\' % (meta_type, \', \'.join(plugin_list), \', \'.join(active_list)))\n
  return error_list\n
\n
def mergePASDict(portal, s):\n
  raise NotImplementedError\n
\n
promise_dict = {\n
  \'Vifib Machine Authentication Plugin\': [\n
        \'IExtractionPlugin\',\n
        \'IAuthenticationPlugin\',\n
        \'IGroupsPlugin\',\n
        \'IUserEnumerationPlugin\'\n
  ],\n
  \'Vifib Shadow Authentication Plugin\': [\n
        \'IAuthenticationPlugin\',\n
        \'IGroupsPlugin\',\n
        \'IUserEnumerationPlugin\'\n
  ],\n
  \'Vifib Browser ID Extraction Plugin\': [\n
        \'IExtractionPlugin\',\n
  ],\n
  \'Vifib Facebook Server Extraction Plugin\': [\n
        \'IExtractionPlugin\',\n
  ],\n
  \'Vifib Google Server Extraction Plugin\': [\n
        \'IExtractionPlugin\',\n
  ],\n
  \'ERP5 Bearer Extraction Plugin\': [\n
        \'IExtractionPlugin\',\n
  ],\n
  \'ERP5 Facebook Extraction Plugin\': [\n
        \'IExtractionPlugin\',\n
  ],\n
  \'ERP5 Google Extraction Plugin\': [\n
        \'IExtractionPlugin\',\n
  ]\n
}\n
\n
pas_difference = getPASDictDifference(portal, promise_dict)\n
if len(pas_difference) != 0:\n
  severity = 1\n
  summary = "PAS not configured as expected"\n
  detail = "Difference %s" % (\'\\n\'.join(pas_difference), )\n
  if fixit:\n
    mergePASDict(portal, promise_dict)\n
else:\n
  severity = 0\n
  summary = "Nothing to do."\n
  detail = ""\n
\n
active_result = ActiveResult()\n
active_result.edit(\n
  summary=summary, \n
  severity=severity,\n
  detail=detail)\n
\n
context.newActiveProcess().postResult(active_result)\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>tag, fixit=False, **kw</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Alarm_checkPromiseVifibPAS</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
